#CellFie
#Fri Feb 14 18:30:50 UTC 2020
JVMLevel=
LSID=urn\:lsid\:broad.mit.edu\:cancer.software.genepattern.module.analysis\:00405\:1.5
author=Benjamin Kellman;UC San Diego
categories=metabolomics
commandLine=sh /CellFie/matlab_compiled/execCellfie/for_redistribution_files_only/run_execCellfie.sh /usr/local/MATLAB/MATLAB_Runtime/v94 <InputData> <SampleNumber> <ReferenceModel> <ThreshType> <PercentileOrValue> <LocalThresholdType> <ThresholdLowerBound> <ThresholdUpperBound> ./
cpuType=any
description=CellFie\: Cellular Functions InferencE  - An alternative approach to capture the breadth of cellular functions by performing a functional analysis of existing biological networks. Please refer to the documentation for details about the procedure\n\n
fileFormat=
job.docker.image=genepattern/cellfie\:0.4.1
language=MATLAB
name=CellFie
os=any
p1_MODE=IN
p1_TYPE=FILE
p1_default_value=
p1_description=Gene expression matrix can be provide in .mat or .csv. For .mat files, you need to provide a structure variable (named e.g. data) containing a cell field named "genes" containing the NCBI Entrez gene ID (one gene by cell) and a double field named "value" containing a matrix with gene expression value for each of the sample you want to evaluate (i.e. with rows corresponding to genes and columns corresponding to samples). See available example dataTest.mat. (https\://github.com/LewisLabUCSD/CellFie/blob/master/test/suite/dataTest.mat) For csv. files, you need to provide an expression matrix with rows corresponding to genes and columns corresponding to samples. The first column is the list of genes NCBI Entrez gene ID and the first header row should start with "genes" and be followed by the name of each sample present in your dataset. See available example dataTest.csv.(https\://github.com/LewisLabUCSD/CellFie/blob/master/test/suite/dataTest.csv)\nThe list of genes and associated NCBI Entrez ID present in each reference model can be\ndownloaded here (https\://github.com/LewisLabUCSD/CellFie/raw/master/docs/NCBI_Entrez_gene_ID_models.xlsx).
p1_fileFormat=csv
p1_flag=
p1_name=InputData
p1_numValues=0..1
p1_optional=
p1_prefix=
p1_prefix_when_specified=
p1_type=java.io.File
p1_value=
p2_MODE=
p2_TYPE=Integer
p2_default_value=
p2_description=The number of samples in the input file to analyze
p2_fileFormat=
p2_flag=
p2_name=SampleNumber
p2_numValues=0..1
p2_optional=
p2_prefix=
p2_prefix_when_specified=
p2_type=java.lang.Integer
p2_value=
p3_MODE=
p3_TYPE=TEXT
p3_default_value=MT_recon_2_2_entrez.mat
p3_description=Name of the reference model to use to compute metabolic task scores
p3_fileFormat=
p3_flag=
p3_name=ReferenceModel
p3_numValues=0..1
p3_optional=
p3_prefix=
p3_prefix_when_specified=
p3_type=java.lang.String
p3_value=MT_recon_2_2_entrez.mat\=Human_recon_2_2;MT_iCHOv1_final.mat\=CHO_iCHOv1;MT_iHsa.mat\=Human_iHsa;MT_iMM1415.mat\=Mouse_iMM1415;MT_iRno.mat\=Rat_iRn
p4_MODE=
p4_TYPE=TEXT
p4_default_value=local
p4_description=The thresholding type to use - global or local
p4_fileFormat=
p4_flag=
p4_name=ThreshType
p4_numValues=0..1
p4_optional=
p4_prefix=
p4_prefix_when_specified=
p4_type=java.lang.String
p4_value=local\=local;global\=global
p5_MODE=
p5_TYPE=TEXT
p5_default_value=value
p5_description=The type of threshold to use, either user-supplied cutoff values or cutoff percentiles
p5_fileFormat=
p5_flag=
p5_name=PercentileOrValue
p5_numValues=0..1
p5_optional=
p5_prefix=
p5_prefix_when_specified=
p5_type=java.lang.String
p5_value=value\=value;percentile\=percentile
p6_MODE=
p6_TYPE=TEXT
p6_default_value=minmaxmean
p6_description=The type of local thresholding, either minmaxmean or mean
p6_fileFormat=
p6_flag=
p6_name=LocalThresholdType
p6_numValues=0..1
p6_optional=
p6_prefix=
p6_prefix_when_specified=
p6_type=java.lang.String
p6_value=minmaxmean\=minmaxmean;mean\=mean
p7_MODE=
p7_TYPE=Floating Point
p7_default_value=25
p7_description=The lower bound to use for thresholding, either a value or a percentile
p7_fileFormat=
p7_flag=
p7_name=ThresholdLowerBound
p7_numValues=0..1
p7_optional=
p7_prefix=
p7_prefix_when_specified=
p7_type=java.lang.Float
p7_value=
p8_MODE=
p8_TYPE=Floating Point
p8_default_value=75
p8_description=The upper bound to use for thresholding, either a value or a percentile
p8_fileFormat=
p8_flag=
p8_name=ThresholdUpperBound
p8_numValues=0..1
p8_optional=
p8_prefix=
p8_prefix_when_specified=
p8_type=java.lang.Float
p8_value=
privacy=private
publicationDate=10/18/2019 15\:24
quality=production
taskDoc=doc.html
taskType=metabolomics
userid=atwenzel2
version=Incorporating bug fixes from devs to release version 1.5
