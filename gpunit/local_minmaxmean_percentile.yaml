# Based on https://github.com/genepattern/STREAM.DetectTransitionGenes/blob/master/test/stream_detecttransitiongenes.yaml

#
# ant -f ${GPUNIT_HOME}/build.xml -Dgpunit.diffStripTrailingCR="--strip-trailing-cr" -Dgp.host="beta.genepattern.org" -Dgp.url="https://beta.genepattern.org" -Dgp.user="atwenzel2" -Dgp.password="" -Dgpunit.testfolder=`pwd` gpunit
#

#load('dataTest.mat')
#SampleNumber=3;
#ref='MT_recon_2_2_entrez.mat';
#param.ThreshType='local';
#param.percentile_or_value='percentile';
#param.LocalThresholdType='minmaxmean';
#param.percentile_low=25;
#param.percentile_high=75;

#[score, score_binary ,taskInfos, detailScoring]=CellFie(data,SampleNumber,ref,param);
#save dataRecon22_local_minmaxmean_percentile score score_binary taskInfos detailScoring
#csvwrite('dataRecon22_local_minmaxmean_percentile.score.csv',score);
#csvwrite('dataRecon22_local_minmaxmean_percentile.score_binary.csv',score_binary);
#T = cell2table(taskInfos);
#writetable(T,'dataRecon22_local_minmaxmean_percentile.taskInfo.csv');

name: local_minmaxmean_percentile
module: CellFie
params:
    "Data": "input/dataTest.csv"
    "Sample.Number": 3
    "Referenc.eModel": "Human_recon_2_2"
    "Thresholding.Approach": "local"
    "Percentile.Or.Value": "percentile"
    "Local.Threshold.Type": "minmaxmean"
    "Local.Lower.Bound": 25
    "Local.Upper.Bound": 75

assertions:
    jobStatus: success
    files:
    files:
        "detail_scoring":
            diff: "output/dataRecon22_local_minmaxmean_percentile.detailScoring.csv"
        "mat":
            diff: "output/dataRecon22_local_minmaxmean_percentile.mat"
        "task_info":
            diff: "output/dataRecon22_local_minmaxmean_percentile.taskInfo.csv"
